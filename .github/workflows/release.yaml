name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}
    steps:
      - name: 运行 release-please-action
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  build:
    needs: release
    if: needs.release.outputs.releases_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: |
            - args: [--global, husky]
            - args: [--no-frozen-lockfile]

      - name: 构建
        run: |
          pnpm build
          pnpm pkg delete devDependencies
          mkdir -p ${{ runner.temp }}/temp/
          cp -r package.json CHANGELOG.md README.md LICENSE resources config lib ${{ runner.temp }}/temp/
      
      - name: 构建文件
        run: |
          if [ "$(git ls-files | wc -l)" -gt 0 ]; then
            git rm -rf .
          fi
          cp -r ${{ runner.temp }}/temp/* ./
          rm -rf node_modules pnpm-lock.yaml
      
      - name: 获取主分支的最新提交消息
        id: commit-message
        run: |
          echo "commit_msg=$(git log origin/${{ github.ref_name }} -1 --pretty=format:'%s')" >> $GITHUB_ENV

      - name: 提交并推送更改
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: "${{ env.commit_msg }}"
          empty: true
          amend: true
          force: true
          branch: "build"

  create-release:
    needs: [release, build]
    if: needs.release.outputs.releases_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          ref: build
      
      - name: 构建产物
        run: |
          zip -r build.zip . -x "*.git/*"

      - name: 获取最新标签
        id: get_tag
        run: |
          TAG=$(git describe --tags --abbrev=0)
          echo "最新的tag标签: $TAG"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          
      - name: 上传产物
        uses: softprops/action-gh-release@v1
        with:
          files: build.zip
          tag_name: ${{ steps.get_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: [release, build]
    if: needs.release.outputs.releases_created == 'true'
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          ref: build

      - name: 发布到 NPM
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          registry: https://registry.npmjs.org/
          access: public
          provenance: true